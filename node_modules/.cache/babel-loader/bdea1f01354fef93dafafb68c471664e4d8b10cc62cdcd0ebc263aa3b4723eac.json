{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst HeaderSlice = createSlice({\n  name: \"postSlice\",\n  initialState: {\n    lang: \"RU\",\n    isLang: false,\n    isMenu: false\n  },\n  reducers: {\n    setLang: (state, action) => {\n      state.lang = action.payload;\n    },\n    setIsLang: (state, action) => {\n      state.isLang = !state.isLang;\n    },\n    setIsMenu: (state, action) => {\n      state.isLang = !state.isLang;\n    }\n  }\n});\nexport const {\n  setLang,\n  setIsLang\n} = HeaderSlice.actions;\nexport default HeaderSlice.reducer;","map":{"version":3,"names":["createSlice","HeaderSlice","name","initialState","lang","isLang","isMenu","reducers","setLang","state","action","payload","setIsLang","setIsMenu","actions","reducer"],"sources":["C:/Users/Administrator/Desktop/pipez/diplom/src/redux/HeaderSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst HeaderSlice = createSlice({\r\n    name: \"postSlice\",\r\n    initialState: {\r\n        lang: \"RU\",\r\n        isLang: false,\r\n        isMenu: false\r\n    },\r\n    reducers: {\r\n        setLang:(state,action)=>{state.lang = action.payload},\r\n        setIsLang:(state,action)=>{state.isLang = !state.isLang},\r\n        setIsMenu:(state,action)=>{state.isLang = !state.isLang}\r\n    },\r\n});\r\n\r\nexport const {setLang,setIsLang} = HeaderSlice.actions\r\nexport default HeaderSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAO,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MAACD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAAA,CAAC;IACrDC,SAAS,EAACA,CAACH,KAAK,EAACC,MAAM,KAAG;MAACD,KAAK,CAACJ,MAAM,GAAG,CAACI,KAAK,CAACJ,MAAM;IAAA,CAAC;IACxDQ,SAAS,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAG;MAACD,KAAK,CAACJ,MAAM,GAAG,CAACI,KAAK,CAACJ,MAAM;IAAA;EAC3D;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACG,OAAO;EAACI;AAAS,CAAC,GAAGX,WAAW,CAACa,OAAO;AACtD,eAAeb,WAAW,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}